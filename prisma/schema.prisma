// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  username      String  @id
  no_hp         String  @db.VarChar(13)
  password      String
  refresh_token String?

  @@map("admin")
}

model User {
  username      String    @id
  no_hp         String    @db.VarChar(13)
  alamat        String?   @db.Text()
  password      String
  cart          Cart[]
  order         Order[]
  invoice       Invoice[]
  refresh_token String?

  @@map("user")
}

model Product {
  id           String    @id @default(uuid())
  product_name String
  price        Int       @default(0)
  description  String
  picture      String
  stock        Int       @default(0)
  category_id  String?   @unique
  category     Category? @relation(fields: [category_id], references: [id], onUpdate: Cascade, onDelete: SetNull)
  Cart         Cart[]

  @@map("product")
}

model Category {
  id            String   @id @default(uuid())
  category_name String   @db.VarChar(40)
  product       Product?

  @@map("category")
}

model Cart {
  id            String  @id @default(uuid())
  username_user String
  product_id    String
  qty           Int     @default(1)
  total_price   Int     @default(0)
  user          User    @relation(fields: [username_user], references: [username], onUpdate: Cascade, onDelete: Cascade)
  product       Product @relation(fields: [product_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  order         Order?

  @@map("cart")
}

model Order {
  id            String @id @default(uuid())
  username_user String
  cart_id       String @unique
  user          User   @relation(fields: [username_user], references: [username], onUpdate: Cascade, onDelete: Cascade)
  cart          Cart   @relation(fields: [cart_id], references: [id], onUpdate: NoAction, onDelete: NoAction)

  @@map("order")
}

model Invoice {
  id               Int      @id @default(autoincrement())
  date             DateTime @default(now())
  invoice_document String   @default("null")
  username_user    String
  user             User     @relation(fields: [username_user], references: [username], onUpdate: Cascade, onDelete: Cascade)

  @@map("invoice")
}
